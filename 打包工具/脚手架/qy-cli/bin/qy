#! /usr/bin/env node

const program=require('commander')
//给字体加颜色
const chalk =require('chalk')


//核心功能 1.创建项目  2.更改配置文件 3. ui界面（类似于@vue/ui）


//1. 创建项目

program
.command('create <app-name>')
.description('create a new project')
.option('-f,--force','overwrite targe directory if it exists')//强制创建的模式（重名时的判断）
.action((name,cmd)=>{
    //执行命令时，的参数会在这里获取到
    require('../lib/create.js')(name,cmd)
})


//2. 配置相关
program
.command('config [value]')
.description('inspect and modify the config')
.option('-g,--get <path>','get value from option')
.option('-s,--set <path> <value>','set value from a options')
.option('-d,--delete <path> ','delete option from config')
.action((value,cmd)=>{
    console.log(value,cmd)

})

//3. 启动ui界面
program
.command('ui')
.description('start and open qy-cli ui')
.option('-p,--port <port>','port used for the ui server')
.action((cmd)=>{
    console.log(cmd)

})

//配置命令说明
program
.version(`qy-cli @${require('../package.json').version}`)
.usage('<command> [option]')

//解析用户执行命令传入的参数

program.on('--help',function(){
    console.log()
    console.log(`run ${chalk.green('qy-cli <command> --help')} show details`)
    console.log()
})


//解析用户传入的参数

program.parse(process.argv)
